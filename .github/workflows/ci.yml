name: AMD Developer Cloud CI

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-intelliperf:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DEV_CLOUD_KEY }}

    - name: Install jq
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Create Droplet
      id: create
      run: |
        DROPLET_NAME="intelliperf-$(date +%s)"
        
        # Create droplet and capture JSON output
        echo "üöÄ Creating droplet..."
        DROPLET_JSON=$(doctl compute droplet create \
          --image 188571990 \
          --size gpu-mi300x1-192gb \
          --region atl1 \
          --ssh-keys ${{ secrets.SSH_KEY_ID }} \
          "$DROPLET_NAME" \
          -o json \
          --wait)
        
        echo "üìÑ Raw droplet JSON output:"
        echo "$DROPLET_JSON"
        
        # Check if droplet creation was successful
        if [ $? -ne 0 ]; then
          echo "‚ùå Failed to create droplet"
          exit 1
        fi
        
        # Extract droplet ID and IP
        DROPLET_ID=$(echo "$DROPLET_JSON" | jq -r '.[0].id')
        PUBLIC_IP=$(echo "$DROPLET_JSON" | jq -r '.[0].networks.v4[] | select(.type=="public") | .ip_address')
        
        # Set outputs for other steps
        echo "droplet_id=$DROPLET_ID" >> $GITHUB_OUTPUT
        echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT
        
        # Save droplet info to file
        echo "$DROPLET_JSON" > droplet_info.json
        
        echo "‚úÖ Droplet created successfully!"
        echo "ID: $DROPLET_ID"
        echo "Public IP: $PUBLIC_IP"
        echo "Name: $DROPLET_NAME"

    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ steps.create.outputs.public_ip }} >> ~/.ssh/known_hosts 2>/dev/null || true

    - name: Wait for SSH to be ready
      run: |
        echo "‚è≥ Waiting for SSH to be ready..."
        for i in {1..30}; do
          if ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no root@${{ steps.create.outputs.public_ip }} "echo 'SSH ready'" 2>/dev/null; then
            echo "‚úÖ SSH is ready!"
            break
          fi
          echo "Attempt $i/30: SSH not ready yet, waiting 10 seconds..."
          sleep 10
        done

    - name: Setup AMD Developer Cloud and Install IntelliPerf
      run: |
        echo "üöÄ Complete AMD Developer Cloud setup and IntelliPerf installation..."
        ssh -o StrictHostKeyChecking=no root@${{ steps.create.outputs.public_ip }} "
          set -e
          
          # Remove any stale dpkg locks at the very beginning
          sudo rm -f /var/lib/apt/lists/lock
          sudo rm -f /var/cache/apt/archives/lock
          sudo rm -f /var/lib/dpkg/lock*
          
          export ROCM_PATH=/opt/rocm
          export PATH=\$ROCM_PATH/bin:\$PATH
          export LD_LIBRARY_PATH=\$ROCM_PATH/lib:\$LD_LIBRARY_PATH
          
          sudo apt-get update
          sudo apt-get install -y python3-venv rocm-llvm-dev libzstd-dev libdwarf-dev locales git
          sudo locale-gen en_US.UTF-8
          
          # Clone the repository
          git clone https://github.com/AMDResearch/intelliperf.git
          cd intelliperf
          
          python3 -m venv intelliperf_env
          source intelliperf_env/bin/activate
          pip install --upgrade pip
          
          pip install -e .
          
          python3 scripts/install_tool.py --all
          
          rocminfo
          
          pip list | grep intelliperf || echo 'IntelliPerf not found in pip list'
        "

    - name: Auto-destroy droplet after use
      if: always()
      run: |
        echo "üóëÔ∏è Auto-destroying droplet ${{ steps.create.outputs.droplet_id }}..."
        doctl compute droplet delete ${{ steps.create.outputs.droplet_id }} --force
        echo "‚úÖ Droplet auto-destroyed successfully!"
