Bootstrap: docker
From: rocm/vllm-dev:nightly_aiter_integration_final_20250325

%environment
    # Runtime environment inside the finished SIF
    export LANG=en_US.UTF-8
    export PATH=/opt/rocm/bin:$PATH
<<<<<<< HEAD:apptainer/intelliperf.def
    export LD_LIBRARY_PATH=/opt/rocm/lib:$LD_LIBRARY_PATH
    export ROCM_PATH=/opt/rocm

    # Misc globals
    export GT_TUNING=/root/guided-tuning
    export PATH=/opt/omniprobe/bin/logDuration:$PATH
    export PATH=/root/rocprofiler-compute/src:$PATH

%files
    examples/bank_conflict/llm.c/requirements.txt /examples/bank_conflict/llm.c/requirements.txt
=======
    export MAESTRO_HOME={{ MAESTRO_HOME }}
>>>>>>> 09ff03f (Update Apptainer build to match pyproject.toml install as in Dockerfile):apptainer/maestro.def

%post
    PATH=/opt/rocm/bin:$PATH
    DEV_MODE={{ DEV_MODE }}
    MAESTRO_HOME={{ MAESTRO_HOME }}

    mkdir -p "${MAESTRO_HOME}"
    # ----- 1. Packages -------------------------------------------------------
    apt-get update
    apt-get install -y --no-install-recommends \
        libzstd-dev \
        python3-setuptools \
        python3-wheel \
        libdwarf-dev \
        rocm-llvm-dev \
        locales \
        gdb \
        ssh
    locale-gen en_US.UTF-8 
    rm -rf /var/lib/apt/lists/*

    # ----- 2. Prepare SSH known_hosts for GitHub cloning ---------------------
    mkdir -p ~/.ssh
    touch ~/.ssh/known_hosts
    ssh-keyscan github.com >> ~/.ssh/known_hosts
    chmod 700 ~/.ssh
    chmod 644 ~/.ssh/known_hosts
    export SSH_AUTH_SOCK={{ SSH_AUTH_SOCK }}

    # ----- 3. Clone & install Maestro only if DEV_MODE == false --------------
    cd "${MAESTRO_HOME}"
    # During `apptainer build`, the host’s SSH agent keys are available if
    # you run:  `APPTAINER_SSH=true apptainer build …`
    git clone git@github.com:AMDResearch/maestro.git .
    
    pip install -e .
    python3 scripts/install_tool.py --all
