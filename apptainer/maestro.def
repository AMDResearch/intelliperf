Bootstrap: docker
From: ubuntu:22.04

%environment
    # Locale
    export LANG=en_US.UTF-8

    # ROCm globals
    export PATH=/opt/rocm/bin:$PATH
    export LD_LIBRARY_PATH=/opt/rocm/lib:$LD_LIBRARY_PATH
    export ROCM_PATH=/opt/rocm

    # Misc globals
    export GT_TUNING=/root/guided-tuning
    export PYTHONPATH=$PYTHONPATH:/root/guided-tuning

%post
    apt-get -y update
    apt-get install -y locales
    locale-gen en_US.UTF-8
    export LANG=en_US.UTF-8

    # Install dependencies
    apt-get -y update
    apt-get install -y software-properties-common 
    apt-get upgrade -y 
    apt-get install -y build-essential python3 python3-pip git wget clang lld libzstd-dev libomp-dev vim
    apt-get install -y locales
    locale-gen en_US.UTF-8
    python3 -m pip install --upgrade pip 
    python3 -m pip install 'cmake==3.22'
    
    # Add GitHub trusted host
    mkdir -p ~/.ssh
    touch ~/.ssh/known_hosts 
    ssh-keyscan github.com >> ~/.ssh/known_hosts 
    chmod 700 ~/.ssh  
    chmod 644 ~/.ssh/known_hosts 

    # Install ROCm
    mkdir --parents --mode=0755 /etc/apt/keyrings
    wget --no-check-certificate https://repo.radeon.com/rocm/rocm.gpg.key -O - | \
        gpg --dearmor | tee /etc/apt/keyrings/rocm.gpg > /dev/null
    
    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/rocm/apt/6.3.2 jammy main" \
        | tee --append /etc/apt/sources.list.d/rocm.list
    
    printf "Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600\n" | tee /etc/apt/preferences.d/rocm-pin-600  
    
    apt-get -y update
    ROCM_VERSION=$(apt-cache search rocm-dev[0-9] | awk '{print $1}' | sed 's/rocm-dev//g')
    apt-get install -y rocm-dev6.3.2 rocm-llvm-dev6.3.2 rocm-hip-runtime-dev6.3.2 rocm-smi-lib6.3.2 rocminfo6.3.2 rocthrust-dev6.3.2 rocprofiler-compute6.3.2
    export PATH=/opt/rocm/bin:$PATH
    export LD_LIBRARY_PATH=/opt/rocm/lib:$LD_LIBRARY_PATH
    export ROCM_PATH=/opt/rocm

    # Install rocprof-compute (via package manager)
    python3 -m pip install --ignore-installed blinker
    python3 -m pip install -r /opt/rocm/libexec/rocprofiler-compute/requirements.txt

    # Install logduration
    export SSH_AUTH_SOCK={{ SSH_AUTH_SOCK }}
    cd /root
    git clone -v git@github.com:AARInternal/logduration.git
    cd logduration
    git submodule update --init --recursive
    mkdir -p build 
    cmake -DCMAKE_INSTALL_PREFIX=/opt/logduration -DCMAKE_PREFIX_PATH=${ROCM_PATH} -DLLVM_INSTALL_DIR=/opt/rocm/llvm -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON -S . -B build 
    cmake --build build --target install

    # Install guided-tuning (JBs tool)
    cd /root
    git clone -v git@github.com:AARInternal/guided-tuning.git
    cd guided-tuning
    python3 -m pip install -r requirements.txt
    export GT_TUNING=$PWD
    # [Patch] Remove the line starting with "gpu_series" in guided-tuning/prep/db.py. Won't be upstreamed until ROCm 6.4
    sed -i '/gpu_series VARCHAR,/d' /root/guided-tuning/prep/db.py

    # Install agents dependencies
    python3 -m pip install openai

