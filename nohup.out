Skipping existing log files.
Adding execute permission to examples/triton/autogen_10/fft.py
Running fft.py, output to examples/triton/autogen_10/swizzling_logs_2/fft_log.txt
[92m05:15:07 - LiteLLM:DEBUG[0m: http_handler.py:579 - Using AiohttpTransport...
[INTELLIPERF] DEBUG: Using AiohttpTransport...
[92m05:15:07 - LiteLLM:DEBUG[0m: http_handler.py:636 - Creating AiohttpTransport...
[INTELLIPERF] DEBUG: Creating AiohttpTransport...
[INTELLIPERF] DEBUG: connect_tcp.started host='raw.githubusercontent.com' port=443 local_address=None timeout=5 socket_options=None
[INTELLIPERF] DEBUG: connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7e81eb2191c0>
[INTELLIPERF] DEBUG: start_tls.started ssl_context=<ssl.SSLContext object at 0x7e81eb2babd0> server_hostname='raw.githubusercontent.com' timeout=5
[INTELLIPERF] DEBUG: start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7e81eb2e9a60>
[INTELLIPERF] DEBUG: send_request_headers.started request=<Request [b'GET']>
[INTELLIPERF] DEBUG: send_request_headers.complete
[INTELLIPERF] DEBUG: send_request_body.started request=<Request [b'GET']>
[INTELLIPERF] DEBUG: send_request_body.complete
[INTELLIPERF] DEBUG: receive_response_headers.started request=<Request [b'GET']>
[INTELLIPERF] DEBUG: receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Connection', b'keep-alive'), (b'Content-Length', b'29175'), (b'Cache-Control', b'max-age=300'), (b'Content-Security-Policy', b"default-src 'none'; style-src 'unsafe-inline'; sandbox"), (b'Content-Type', b'text/plain; charset=utf-8'), (b'ETag', b'W/"add2c674d6e0fd348c1e533eb5c4de6d8594dffdcb88a0277501c0cdb34b933a"'), (b'Strict-Transport-Security', b'max-age=31536000'), (b'X-Content-Type-Options', b'nosniff'), (b'X-Frame-Options', b'deny'), (b'X-XSS-Protection', b'1; mode=block'), (b'X-GitHub-Request-Id', b'4F38:3D8B05:1958F8:21A318:68830F68'), (b'Content-Encoding', b'gzip'), (b'Accept-Ranges', b'bytes'), (b'Date', b'Fri, 25 Jul 2025 05:15:07 GMT'), (b'Via', b'1.1 varnish'), (b'X-Served-By', b'cache-lga21942-LGA'), (b'X-Cache', b'HIT'), (b'X-Cache-Hits', b'18'), (b'X-Timer', b'S1753420508.905597,VS0,VE0'), (b'Vary', b'Authorization,Accept-Encoding'), (b'Access-Control-Allow-Origin', b'*'), (b'Cross-Origin-Resource-Policy', b'cross-origin'), (b'X-Fastly-Request-ID', b'227ba20b7ae632a00be11b4fcaaf205b2412cb05'), (b'Expires', b'Fri, 25 Jul 2025 05:20:07 GMT'), (b'Source-Age', b'282')])
[INTELLIPERF] INFO: HTTP Request: GET https://raw.githubusercontent.com/BerriAI/litellm/main/model_prices_and_context_window.json "HTTP/1.1 200 OK"
[INTELLIPERF] DEBUG: receive_response_body.started request=<Request [b'GET']>
[INTELLIPERF] DEBUG: receive_response_body.complete
[INTELLIPERF] DEBUG: response_closed.started
[INTELLIPERF] DEBUG: response_closed.complete
[INTELLIPERF] DEBUG: close.started
[INTELLIPERF] DEBUG: close.complete
[92m05:15:08 - LiteLLM:DEBUG[0m: litellm_logging.py:182 - [Non-Blocking] Unable to import GenericAPILogger - LiteLLM Enterprise Feature - No module named 'litellm_enterprise'
[INTELLIPERF] DEBUG: [Non-Blocking] Unable to import GenericAPILogger - LiteLLM Enterprise Feature - No module named 'litellm_enterprise'
[92m05:15:08 - LiteLLM:DEBUG[0m: transformation.py:17 - [Non-Blocking] Unable to import _ENTERPRISE_ResponsesSessionHandler - LiteLLM Enterprise Feature - No module named 'litellm_enterprise'
[INTELLIPERF] DEBUG: [Non-Blocking] Unable to import _ENTERPRISE_ResponsesSessionHandler - LiteLLM Enterprise Feature - No module named 'litellm_enterprise'
[92m05:15:08 - LiteLLM:DEBUG[0m: http_handler.py:579 - Using AiohttpTransport...
[INTELLIPERF] DEBUG: Using AiohttpTransport...
[92m05:15:08 - LiteLLM:DEBUG[0m: http_handler.py:636 - Creating AiohttpTransport...
[INTELLIPERF] DEBUG: Creating AiohttpTransport...
[92m05:15:08 - LiteLLM:DEBUG[0m: http_handler.py:579 - Using AiohttpTransport...
[INTELLIPERF] DEBUG: Using AiohttpTransport...
[92m05:15:08 - LiteLLM:DEBUG[0m: http_handler.py:636 - Creating AiohttpTransport...
[INTELLIPERF] DEBUG: Creating AiohttpTransport...
[92m05:15:08 - LiteLLM:DEBUG[0m: http_handler.py:579 - Using AiohttpTransport...
[INTELLIPERF] DEBUG: Using AiohttpTransport...
[92m05:15:08 - LiteLLM:DEBUG[0m: http_handler.py:636 - Creating AiohttpTransport...
[INTELLIPERF] DEBUG: Creating AiohttpTransport...
[INTELLIPERF] DEBUG: name: 2025_07_25-05_15_07
[INTELLIPERF] DEBUG: build_command: None
[INTELLIPERF] DEBUG: instrument_command: None
[INTELLIPERF] DEBUG: project_directory: ./examples
[INTELLIPERF] DEBUG: app_cmd: ['./triton/autogen_10/fft.py']
[INTELLIPERF] INFO: Creating temporary project directory: /tmp/tmptpv4c2vl
[INTELLIPERF] DEBUG: Copied project from ./examples to /tmp/tmptpv4c2vl
[INTELLIPERF] DEBUG: --------------------------------
[INTELLIPERF] DEBUG: Showing application details of 2025_07_25-05_15_07
[INTELLIPERF] DEBUG: Project directory: ./examples
[INTELLIPERF] DEBUG: Build command: None
[INTELLIPERF] DEBUG: Instrument command: None
[INTELLIPERF] DEBUG: App command: ['./triton/autogen_10/fft.py']
[INTELLIPERF] DEBUG: App args: 
[INTELLIPERF] DEBUG: App cmd without args: ./triton/autogen_10/fft.py
[INTELLIPERF] DEBUG: --------------------------------
[INTELLIPERF] DEBUG: Showing application details of 2025_07_25-05_15_07_clone
[INTELLIPERF] DEBUG: Project directory: /tmp/tmptpv4c2vl
[INTELLIPERF] DEBUG: Build command: None
[INTELLIPERF] DEBUG: Instrument command: None
[INTELLIPERF] DEBUG: App command: ['./triton/autogen_10/fft.py']
[INTELLIPERF] DEBUG: App args: 
[INTELLIPERF] DEBUG: App cmd without args: ./triton/autogen_10/fft.py
[INTELLIPERF] DEBUG: --------------------------------
[INTELLIPERF] DEBUG: --------------------------------
[INTELLIPERF] DEBUG: Profiling app with name 2025_07_25-05_15_07_clone
[INTELLIPERF] DEBUG: Profiling app with command ['./triton/autogen_10/fft.py']
[INTELLIPERF] DEBUG: Running the command: rm -rf /root/intelliperf/external/guided-tuning/workloads/
[INTELLIPERF] DEBUG: Working directory: /tmp/tmptpv4c2vl
[INTELLIPERF] DEBUG: PATH: /root/intelliperf/external/rocprofiler-compute/src:/root/intelliperf_env/bin:/opt/rocm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
[INTELLIPERF] DEBUG: Running the command: rm -rf /root/intelliperf/external/guided-tuning/data/guided.db
[INTELLIPERF] DEBUG: Working directory: /tmp/tmptpv4c2vl
[INTELLIPERF] DEBUG: PATH: /root/intelliperf/external/rocprofiler-compute/src:/root/intelliperf_env/bin:/opt/rocm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
[INTELLIPERF] DEBUG: Running the command: /root/intelliperf/external/guided-tuning/bin/gt profile -n 2025_07_25-05_15_07_clone --top-n 1 -- ./triton/autogen_10/fft.py
[INTELLIPERF] DEBUG: Working directory: /tmp/tmptpv4c2vl
[INTELLIPERF] DEBUG: PATH: /root/intelliperf/external/rocprofiler-compute/src:/root/intelliperf_env/bin:/opt/rocm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin


Traceback (most recent call last):
  File "/root/intelliperf_env/bin/intelliperf", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/root/intelliperf/src/intelliperf/__main__.py", line 233, in main
    optimizer.profile_pass()
  File "/root/intelliperf/src/intelliperf/formulas/swizzling_test.py", line 174, in profile_pass
    return super().profile_pass()
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/root/intelliperf/src/intelliperf/formulas/formula_base.py", line 153, in profile_pass
    self._initial_profiler_results = self._application.profile(top_n=self.top_n)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/intelliperf/src/intelliperf/core/application.py", line 92, in profile
    success, output = capture_subprocess_output(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/intelliperf/src/intelliperf/utils/process.py", line 65, in capture_subprocess_output
    result = subprocess.run(
             ^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/subprocess.py", line 550, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/subprocess.py", line 1209, in communicate
    stdout, stderr = self._communicate(input, endtime, timeout)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/subprocess.py", line 2115, in _communicate
    ready = selector.select(timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
[INTELLIPERF] DEBUG: Using selector: EpollSelector
